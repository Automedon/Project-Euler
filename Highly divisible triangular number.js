/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

const ruler12 = () => {
  let number = 1;
  let arr = [];
  for (let i = 2; true; i++) {
    let check = number;
    //Finding all divisors of number
    for (let j = 2; true; true) {
      if (check % j === 0) {
        check /= j;
        //adding divisor to arr
        arr.push(j);
        j = 2;
        //no reason to find more because 1 is 1
        if (check === 1) {
          break;
        }
      } else {
        j++;
      }
    }
    const canItBeEnough = Object.values(
      arr.reduce((a, b) => ((a[b] = a[b] ? a[b] + 1 : 1), a), {})
    )
      .map((v) => v + 1)
      .reduce((a, b) => a * b, 1);
    if (canItBeEnough >= 500) {
      return number;
    }
    // number of divisors is less than 500 so we need to reset values except number
    number += i;
    arr = [];
    divisors = 0;
  }
};

console.log(ruler12()); // 76576500
